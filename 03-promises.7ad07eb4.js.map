{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SACMC,EAAOC,SAASC,cAAc,QAEpCF,EAAKG,iBAAiB,UAItB,SAAkBC,GAChBA,EAAMC,iBACN,IAAIC,EAAaC,SAASP,EAAKQ,MAAMC,OACjCC,EAAWH,SAASP,EAAKW,OAAOF,OAChCG,EAAOL,SAASP,EAAKY,KAAKH,OAE9B,GAAIH,EAAa,GAAKI,EAAW,GAAKE,GAAQ,EAC5C,OAAOC,EAAAf,GAASgB,OAAOC,QACrB,sDAGF,IAAK,IAAIC,EAAI,EAAGA,GAAKN,EAAUM,GAAK,EAElCC,EAAcD,EADNV,EAAaM,GAAQI,EAAI,IAE9BE,MAAK,SAAAC,GACJN,EAAAf,GAASgB,OAAOM,QAAQD,E,IAEzBE,OAAM,SAAAF,GACLN,EAAAf,GAASgB,OAAOC,QAAQI,E,OAMlC,SAASF,EAAcP,EAAUY,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,uBAAwCG,OAAfpB,EAAS,QAAYoB,OAANR,EAAM,OAEpDM,EAAK,sBAAqCE,OAAfpB,EAAS,QAAYoB,OAANR,EAAM,M,GAEnDA,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst form = document.querySelector('form');\n\nform.addEventListener('submit', onSubmit);\n\nlet delay = 0;\n\nfunction onSubmit(event) {\n  event.preventDefault();\n  let delayStart = parseInt(form.delay.value);\n  let position = parseInt(form.amount.value);\n  let step = parseInt(form.step.value);\n\n  if (delayStart < 0 || position < 0 || step <= 0) {\n    return Notiflix.Notify.failure(\n      'Data entered incorrectly. Please re-enter the data'\n    );\n  } else {\n    for (let i = 1; i <= position; i += 1) {\n      delay = delayStart + step * (i - 1);\n      createPromise(i, delay)\n        .then(message => {\n          Notiflix.Notify.success(message);\n        })\n        .catch(message => {\n          Notiflix.Notify.failure(message);\n        });\n    }\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","addEventListener","event","preventDefault","delayStart","parseInt","delay","value","position","amount","step","$parcel$interopDefault","Notify","failure","i","$ce04d3a99e08e73b$var$createPromise","then","message","success","catch","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","concat"],"version":3,"file":"03-promises.7ad07eb4.js.map"}